CREATE DATABASE CAREMATCH;

CREATE TABLE CAREMATCH.MOTIVO_CANCELAMENTO (
ID_MOTIVO INTEGER PRIMARY KEY, 
DESCRICAO VARCHAR(80)
);

CREATE TABLE CAREMATCH.CIDADE (
	ID_CIDADE INTEGER PRIMARY KEY,
    COD_CIDADE INTEGER,
    NOME VARCHAR(60),
    UF VARCHAR(2),
    PAIS VARCHAR(60)
);

CREATE TABLE CAREMATCH.USUARIO (
ID_USUARIO INTEGER PRIMARY KEY,
NOME VARCHAR(60),
SOBRENOME VARCHAR(90),
LOGIN VARCHAR(30), 
SENHA VARCHAR(60),
DT_CRIACAO DATE,
SESSION_TOKEN VARCHAR(80),
TIPO_USUARIO VARCHAR(1),
EMAIL VARCHAR(90),
TELEFONE VARCHAR(20),
DT_NASCIMENTO DATE,
DESABILITADO VARCHAR(1));

CREATE TABLE CAREMATCH.PROCURADOR (
ID_PROCURADOR INTEGER PRIMARY KEY,
ID_USUARIO INTEGER NOT NULL,
DESCRICAO VARCHAR(200),
RESUMO_NECESSIDADE VARCHAR(200),
FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO)
);

CREATE TABLE CAREMATCH.PROCURADOR_X_NECESSIDADE (
ID_NECESSIDADE INTEGER,
DIA_NECESSIDADE VARCHAR(2),
ID_PROCURADOR INTEGER,
HORA_INICIAL TIME,
HORA_FINAL TIME,
INTEGRAL VARCHAR(1),
PRIMARY KEY(ID_NECESSIDADE, DIA_NECESSIDADE, ID_PROCURADOR),
FOREIGN KEY (ID_PROCURADOR) REFERENCES PROCURADOR(ID_PROCURADOR)
);

CREATE TABLE CAREMATCH.ENDERECO_PROCURADOR (
	ID_ENDERECO INTEGER,
    ID_PROCURADOR INTEGER,
    ID_CIDADE INTEGER NOT NULL,
    LOGRADOURO VARCHAR(100),
    BAIRRO VARCHAR(100),
    COMPLEMENTO VARCHAR(100),
    CEP VARCHAR(8),
	PRIMARY KEY (ID_ENDERECO, ID_PROCURADOR),
    FOREIGN KEY (ID_PROCURADOR) REFERENCES PROCURADOR(ID_PROCURADOR),
    FOREIGN KEY (ID_CIDADE) REFERENCES CIDADE(ID_CIDADE)
);

CREATE TABLE CAREMATCH.CUIDADOR (
ID_CUIDADOR INTEGER PRIMARY KEY,
ID_USUARIO INTEGER NOT NULL,
DESCRICAO VARCHAR(200),
TEMPO_EXP INTEGER,
UNIDADE_TEMPO VARCHAR(1),
FORMACAO VARCHAR(3),
ATENDE_CASA VARCHAR(1),
FOREIGN KEY (ID_USUARIO) REFERENCES USUARIO(ID_USUARIO)
);

CREATE TABLE CAREMATCH.ENDERECO_CUIDADOR (
	ID_ENDERECO INTEGER,
    ID_CUIDADOR INTEGER,
    ID_CIDADE INTEGER NOT NULL,
    LOGRADOURO VARCHAR(100),
    BAIRRO VARCHAR(100),
    COMPLEMENTO VARCHAR(100),
    ACESSIVEL VARCHAR(1),
    CEP VARCHAR(8),
    PRIMARY KEY (ID_ENDERECO, ID_CUIDADOR),
    FOREIGN KEY (ID_CUIDADOR) REFERENCES CUIDADOR(ID_CUIDADOR),
    FOREIGN KEY (ID_CIDADE) REFERENCES CIDADE(ID_CIDADE)
);

CREATE TABLE CAREMATCH.CUIDADOR_X_CERTIFICADO (
ID_CERTIFICADO INTEGER,
ID_CUIDADOR INTEGER,
INSTITUICAO VARCHAR(200),
DATA_INICIAL DATE,
DATA_FINAL DATE, 
LINK_CERTIFICADO VARCHAR(200),
PRIMARY KEY (ID_CERTIFICADO, ID_CUIDADOR),
FOREIGN KEY (ID_CUIDADOR) REFERENCES CUIDADOR(ID_CUIDADOR)
);

CREATE TABLE CAREMATCH.CUIDADOR_X_DISPONIBILIDADE (
ID_DISPONIBILIDADE INTEGER,
DIA_SEMANA VARCHAR(2),
ID_CUIDADOR INTEGER,
HORA_INICIAL TIME,
HORA_FINAL TIME, 
DIA_INTEIRO VARCHAR(1),
PRIMARY KEY (ID_DISPONIBILIDADE, DIA_SEMANA,ID_CUIDADOR),
FOREIGN KEY (ID_CUIDADOR) REFERENCES CUIDADOR(ID_CUIDADOR)
);

CREATE TABLE CAREMATCH.CUIDADOR_X_EXPERIENCIA (
ID_EXPERIENCIA INTEGER,
ID_CUIDADOR INTEGER,
DESCRICAO VARCHAR(200),
DATA_INICIAL DATE, 
DATA_FINAL DATE,
LOCAL VARCHAR(80),
QTD_PESSOAS INTEGER,
PRIMARY KEY (ID_EXPERIENCIA, ID_CUIDADOR),
FOREIGN KEY (ID_CUIDADOR) REFERENCES CUIDADOR(ID_CUIDADOR)
);

CREATE TABLE CAREMATCH.CONEXAO_CUIDADOR_X_PROCURADOR (
ID_CONEXAO INTEGER,
ID_PROCURADOR INTEGER,
ID_CUIDADOR INTEGER,
DATA_CONEXAO DATE,
JUSTIFICATIVA_PROCURADOR VARCHAR(200),
JUSTIFICATIVA_CUIDADOR VARCHAR(200),
STATUS VARCHAR(3),
MOTIVO_CANCELAMENTO1 INTEGER,
MOTIVO_CANCELAMENTO2 INTEGER,
MOTIVO_CANCELAMENTO3 INTEGER,
PRIMARY KEY (ID_CONEXAO),
FOREIGN KEY (ID_PROCURADOR) REFERENCES PROCURADOR(ID_PROCURADOR),
FOREIGN KEY (ID_CUIDADOR) REFERENCES CUIDADOR(ID_CUIDADOR),
FOREIGN KEY (MOTIVO_CANCELAMENTO1) REFERENCES MOTIVO_CANCELAMENTO(ID_MOTIVO),
FOREIGN KEY (MOTIVO_CANCELAMENTO2) REFERENCES MOTIVO_CANCELAMENTO(ID_MOTIVO),
FOREIGN KEY (MOTIVO_CANCELAMENTO3) REFERENCES MOTIVO_CANCELAMENTO(ID_MOTIVO)
);

CREATE TABLE CAREMATCH.AVALIACAO_PROCURADOR (
ID_AVALIACAO INTEGER,
ID_PROCURADOR INTEGER,
ID_CUIDADOR INTEGER, 
ID_CONEXAO INTEGER,
OBSERVACAO VARCHAR(200),
AVALIACAO INTEGER,
PRIMARY KEY (ID_AVALIACAO, ID_PROCURADOR),
FOREIGN KEY (ID_PROCURADOR) REFERENCES PROCURADOR(ID_PROCURADOR),
FOREIGN KEY (ID_CUIDADOR) REFERENCES CUIDADOR(ID_CUIDADOR),
FOREIGN KEY (ID_CONEXAO) REFERENCES CONEXAO_CUIDADOR_X_PROCURADOR(ID_CONEXAO)
);

CREATE TABLE CAREMATCH.AVALIACAO_CUIDADOR (
ID_AVALIACAO INTEGER,
ID_CUIDADOR INTEGER,
ID_PROCURADOR INTEGER, 
ID_CONEXAO INTEGER,
OBSERVACAO VARCHAR(200),
AVALIACAO INTEGER,
PRIMARY KEY (ID_AVALIACAO, ID_CUIDADOR),
FOREIGN KEY (ID_CUIDADOR) REFERENCES CUIDADOR(ID_CUIDADOR),
FOREIGN KEY (ID_PROCURADOR) REFERENCES PROCURADOR(ID_PROCURADOR),
FOREIGN KEY (ID_CONEXAO) REFERENCES CONEXAO_CUIDADOR_X_PROCURADOR(ID_CONEXAO)
);

--Alteração para adaptar ao Spring Security, definindo o campo "login" como não nulo e unico

ALTER TABLE usuario
MODIFY COLUMN login varchar(30) NOT NULL,
ADD CONSTRAINT login_UNIQUE UNIQUE (login);